{"ast":null,"code":"var _jsxFileName = \"/home/gimenezes/projects/ifood-frontend-test/src/Components/Filters/index.tsx\";\nimport React, { useState } from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { FormControl, TextField, DateTimePicker } from \"./styles\";\n\nconst Filters = props => {\n  const {\n    id,\n    name,\n    values,\n    validation,\n    onChange\n  } = props;\n  const [fieldValue, setFieldValue] = useState(\"\");\n\n  const handleSelectChange = ({\n    target\n  }) => {\n    let value = target.value;\n    const max = validation === null || validation === void 0 ? void 0 : validation.max;\n    const min = validation === null || validation === void 0 ? void 0 : validation.min;\n\n    if (max && Number(value) > max) {\n      value = max.toString();\n    }\n\n    if (value && min && Number(value) < min) {\n      value = min.toString();\n    }\n\n    setFieldValue(value);\n    onChange(value);\n  };\n\n  const handleDateTimePickerChange = date => {\n    const formattedDate = date === null || date === void 0 ? void 0 : date.format(\"yyyy-MM-DDTHH:mm:ss\");\n    setFieldValue(formattedDate);\n    onChange(formattedDate);\n  };\n\n  const getText = () => {\n    if ((validation === null || validation === void 0 ? void 0 : validation.primitiveType) === \"INTEGER\") {\n      return \"number\";\n    }\n\n    return \"text\";\n  };\n\n  if (values === null || values === void 0 ? void 0 : values.length) {\n    return /*#__PURE__*/React.createElement(FormControl, {\n      fullWidth: true,\n      variant: \"outlined\",\n      \"data-testid\": \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      id: `${id}-label`,\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, name), /*#__PURE__*/React.createElement(Select, {\n      labelId: `${id}-label`,\n      value: fieldValue,\n      label: name,\n      onChange: handleSelectChange,\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Selecione\"), values === null || values === void 0 ? void 0 : values.map(selectValue => /*#__PURE__*/React.createElement(MenuItem, {\n      value: selectValue.value,\n      key: selectValue.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, selectValue.name))));\n  }\n\n  if ((validation === null || validation === void 0 ? void 0 : validation.entityType) === \"DATE_TIME\") {\n    return /*#__PURE__*/React.createElement(DateTimePicker, {\n      \"data-testid\": \"date-time-picker\",\n      clearable: true,\n      color: \"secondary\",\n      inputVariant: \"outlined\",\n      fullWidth: true,\n      label: name,\n      format: \"DD-MM-yyyy HH:mm:ss\",\n      clearLabel: \"Limpar\",\n      cancelLabel: \"Cancelar\",\n      value: fieldValue || null,\n      onChange: handleDateTimePickerChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(TextField, {\n    \"data-testid\": \"text-field\",\n    color: \"secondary\",\n    variant: \"outlined\",\n    fullWidth: true,\n    label: name,\n    type: getText(),\n    value: fieldValue,\n    onChange: handleSelectChange,\n    InputProps: {\n      inputProps: {\n        min: validation === null || validation === void 0 ? void 0 : validation.min,\n        max: validation === null || validation === void 0 ? void 0 : validation.max\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Filters;","map":{"version":3,"sources":["/home/gimenezes/projects/ifood-frontend-test/src/Components/Filters/index.tsx"],"names":["React","useState","InputLabel","MenuItem","Select","FormControl","TextField","DateTimePicker","Filters","props","id","name","values","validation","onChange","fieldValue","setFieldValue","handleSelectChange","target","value","max","min","Number","toString","handleDateTimePickerChange","date","formattedDate","format","getText","primitiveType","length","map","selectValue","entityType","inputProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\n\nimport { FormControl, TextField, DateTimePicker } from \"./styles\";\n\nexport interface IFilterProps {\n  id: string;\n  name: string;\n  values?: { value: string; name: string }[];\n  validation?: {\n    primitiveType?: \"STRING\" | \"INTEGER\";\n    entityType?: \"DATE_TIME\";\n    min?: number;\n    max?: number;\n  };\n  onChange: (value: string) => void;\n}\n\nconst Filters: React.FC<IFilterProps> = (props) => {\n  const { id, name, values, validation, onChange } = props;\n\n  const [fieldValue, setFieldValue] = useState(\"\");\n\n  const handleSelectChange = ({\n    target,\n  }: React.ChangeEvent<{ value: unknown }>) => {\n    let value = target.value as string;\n\n    const max = validation?.max;\n    const min = validation?.min;\n\n    if (max && Number(value) > max) {\n      value = max.toString();\n    }\n\n    if (value && min && Number(value) < min) {\n      value = min.toString();\n    }\n\n    setFieldValue(value);\n    onChange(value);\n  };\n\n  const handleDateTimePickerChange = (date: any) => {\n    const formattedDate = date?.format(\"yyyy-MM-DDTHH:mm:ss\");\n\n    setFieldValue(formattedDate);\n    onChange(formattedDate);\n  };\n\n  const getText = () => {\n    if (validation?.primitiveType === \"INTEGER\") {\n      return \"number\";\n    }\n\n    return \"text\";\n  };\n\n  if (values?.length) {\n    return (\n      <FormControl fullWidth variant=\"outlined\" data-testid=\"select\">\n        <InputLabel id={`${id}-label`} color=\"secondary\">\n          {name}\n        </InputLabel>\n        <Select\n          labelId={`${id}-label`}\n          value={fieldValue}\n          label={name}\n          onChange={handleSelectChange}\n          color=\"secondary\"\n        >\n          <MenuItem value=\"\">Selecione</MenuItem>\n          {values?.map((selectValue) => (\n            <MenuItem value={selectValue.value} key={selectValue.value}>\n              {selectValue.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    );\n  }\n\n  if (validation?.entityType === \"DATE_TIME\") {\n    return (\n      <DateTimePicker\n        data-testid=\"date-time-picker\"\n        clearable\n        color=\"secondary\"\n        inputVariant=\"outlined\"\n        fullWidth\n        label={name}\n        format=\"DD-MM-yyyy HH:mm:ss\"\n        clearLabel=\"Limpar\"\n        cancelLabel=\"Cancelar\"\n        value={fieldValue || null}\n        onChange={handleDateTimePickerChange}\n      />\n    );\n  }\n\n  return (\n    <TextField\n      data-testid=\"text-field\"\n      color=\"secondary\"\n      variant=\"outlined\"\n      fullWidth\n      label={name}\n      type={getText()}\n      value={fieldValue}\n      onChange={handleSelectChange}\n      InputProps={{\n        inputProps: {\n          min: validation?.min,\n          max: validation?.max,\n        },\n      }}\n    />\n  );\n};\n\nexport default Filters;\n"]},"metadata":{},"sourceType":"module"}