{"ast":null,"code":"var _jsxFileName = \"/home/gimenezes/projects/ifood-frontend-test/src/Pages/Playlists/PlaylistCards/index.tsx\";\nimport React, { memo, useState } from \"react\";\nimport { Container, Image, Info, InfoText, Name, Description } from \"./styles\";\n\nconst PlaylistCards = props => {\n  const {\n    name,\n    description,\n    images,\n    external_urls\n  } = props;\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [image] = images;\n  const {\n    spotify\n  } = external_urls;\n\n  const handleImageLoad = () => setImageLoaded(true);\n\n  return /*#__PURE__*/React.createElement(Container, {\n    href: spotify,\n    target: \"_blank\",\n    loaded: imageLoaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: image === null || image === void 0 ? void 0 : image.url,\n    alt: name,\n    onLoad: handleImageLoad,\n    loaded: imageLoaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InfoText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Name, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, name), /*#__PURE__*/React.createElement(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, description))));\n};\n\nexport default memo(PlaylistCards);","map":{"version":3,"sources":["/home/gimenezes/projects/ifood-frontend-test/src/Pages/Playlists/PlaylistCards/index.tsx"],"names":["React","memo","useState","Container","Image","Info","InfoText","Name","Description","PlaylistCards","props","name","description","images","external_urls","imageLoaded","setImageLoaded","image","spotify","handleImageLoad","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,QAAsC,OAAtC;AAIA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,QAAjC,EAA2CC,IAA3C,EAAiDC,WAAjD,QAAoE,UAApE;;AAEA,MAAMC,aAAsC,GAAIC,KAAD,IAAW;AACxD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA;AAA7B,MAA+CJ,KAArD;AAEA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAACe,KAAD,IAAUJ,MAAhB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAcJ,aAApB;;AAEA,QAAMK,eAAe,GAAG,MAAMH,cAAc,CAAC,IAAD,CAA5C;;AAEA,sBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEE,OAAjB;AAA0B,IAAA,MAAM,EAAC,QAAjC;AAA0C,IAAA,MAAM,EAAEH,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEE,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEG,GADd;AAEE,IAAA,GAAG,EAAET,IAFP;AAGE,IAAA,MAAM,EAAEQ,eAHV;AAIE,IAAA,MAAM,EAAEJ,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,IAAP,CADF,eAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcC,WAAd,CAFF,CADF,CAPF,CADF;AAgBD,CA1BD;;AA4BA,eAAeX,IAAI,CAACQ,aAAD,CAAnB","sourcesContent":["import React, { memo, useState } from \"react\";\n\nimport { IPlaylistItem } from \"../../../Services/spotifyService\";\n\nimport { Container, Image, Info, InfoText, Name, Description } from \"./styles\";\n\nconst PlaylistCards: React.FC<IPlaylistItem> = (props) => {\n  const { name, description, images, external_urls } = props;\n\n  const [imageLoaded, setImageLoaded] = useState(false);\n\n  const [image] = images;\n  const { spotify } = external_urls;\n\n  const handleImageLoad = () => setImageLoaded(true);\n\n  return (\n    <Container href={spotify} target=\"_blank\" loaded={imageLoaded}>\n      <Image\n        src={image?.url}\n        alt={name}\n        onLoad={handleImageLoad}\n        loaded={imageLoaded}\n      />\n      <Info>\n        <InfoText>\n          <Name>{name}</Name>\n          <Description>{description}</Description>\n        </InfoText>\n      </Info>\n    </Container>\n  );\n};\n\nexport default memo(PlaylistCards);\n"]},"metadata":{},"sourceType":"module"}